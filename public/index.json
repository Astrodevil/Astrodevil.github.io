[{"content":"Today is the 4th day of my #100DaysOfCode journey with JavaScript.\nI write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!🫱🏼‍🫲🏼\nThis Article is a part of the JavaScript Fundamentals series.\nToday, I learned about Math.random, Math.floor Functions and to call a function within our function.\nMath.random In JavaScript, there are many math utilities on the Math object. To get a random number we can call the Math.random function.\nconst myRandomNumber = Math.random(); The above line will return some number between 0 and 1 (not including 1). Math.random can also be used to generate random numbers between the range.\nExample: Inside getRandom, get a random number from the Math.random() function. Then, return that number!👇🏼\nfunction getRandom() { return Math.random(); } A random number between 0 and 100 could be created by simply multiplying the output:\n// randomNumber will be between 0 and 100 const randomNumber = Math.random() * 100; We could multiply and then add to get a random number between 15 and 100:\n// randomNumber will be between 15 and 100 const randomNumber = (Math.random() * 85) + 15; Math.floor Math.floor takes arguments.\nconst two = Math.floor(2.2598223); Math.floor function will take 2.2598223 and return 2. A number will be rounded to the nearest integer using this function. For instance, if the input was 2.9999, the method would round it to 2.\nExample: Take the argument x and use Math.floor to turn it into an integer without the values after the decimal place. Once you have this floored value, return it!\nfunction getFloor(x) { return Math.floor(x); } Conclusion Ending with an extra bit of information about JavaScript functions\u0026hellip;\nThe JavaScript Math object allows us to perform mathematical tasks on numbers. There are various math object properties.\nToday I learned about Math.random, Math.floor Functions in JavaScript.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/javascript-fundamentals-math-object/","summary":"Today is the 4th day of my #100DaysOfCode journey with JavaScript.\nI write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!🫱🏼‍🫲🏼\nThis Article is a part of the JavaScript Fundamentals series.\nToday, I learned about Math.random, Math.floor Functions and to call a function within our function.","title":"JavaScript Fundamentals: Math Object"},{"content":"Today is the 3rd day of my #100DaysOfCode journey with JavaScript.\nI write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!🫱🏼‍🫲🏼\nThis Article is a part of the JavaScript Fundamentals series.\nI studied functions yesterday, check the previous article. Today it\u0026rsquo;s time to know more about functions and the use of operators.\nParameters and Arguments Both the terms parameter and argument refer to the inputs supplied to a function.\nHere\u0026rsquo;s a function with two inputs:\nfunction addNumbers(a, b) { return a + b; } In the above code, there are two parameters: a and b. These are the variables that are defined in the function declaration.\nIf we were to call this function with two values: 2 and 4\naddNumbers(2, 4); The values 2 and 4 would be considered arguments. Arguments are the data supplied to the function to get filled into parameters.\nOperators JavaScript operators are symbols that are used to perform operations on operands. These are +, -, *, / .\n+ Operator\nThe + is referred to as an addition operator.\nComplete the addTwo function to take an input and add 5 to it.\nfunction addTwo(input) { const output = input + 5; return output; } * Operator\nThe * is referred to as a multiplication operator.\nconst a = 3; const b = a * 4; In the above code, b will have the value 12! We are using the multiplication operator to multiply 3 and 4.\nLet\u0026rsquo;s see with multiple inputs👇🏼by putting multiple inputs under () separated with comma!\nfunction product(2,3) { return 2*3; } / Operator\nThe / is referred to as a division operator.\nFind the average of some numbers:\nconst sum = 2 + 7 + 6; const average = sum / 3; Or we can use parenthesis ():\nconst average = (2 + 7 + 6) / 3; In the above code, the sum of 2, 7, and 6 is 15. Then we divide 15 by 3 (15 / 3) to get 5.\nThe parenthesis will always be evaluated first before any other part of the expression.\nConclusion Ending with an extra bit of information about JavaScript functions\u0026hellip;\nPriority is given to division and multiplication above addition and subtraction. Expressions are evaluated from left to right if the precedence of the operators is the same, as it is when division and multiplication are used.\nToday I learned about Parameters, Arguments and Operators in JavaScript.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/javascript-fundamentals-parameters-arguments-and-operators/","summary":"Today is the 3rd day of my #100DaysOfCode journey with JavaScript.\nI write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!🫱🏼‍🫲🏼\nThis Article is a part of the JavaScript Fundamentals series.\nI studied functions yesterday, check the previous article. Today it\u0026rsquo;s time to know more about functions and the use of operators.","title":"JavaScript Fundamentals: Parameters, Arguments and Operators"},{"content":"Today is the 2nd day of my #100DaysOfCode journey with JavaScript.\nI am going to write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!🫱🏼‍🫲🏼\nThis Article is a part of the JavaScript Fundamentals series.\nMutable let We worked on variables in the last section and now going further with variables, how can we change the stored value inside of a variable?\nWe used const keyword to declare a constant variable, but if we try to change the value it will give errors.\nconst a = 4; a = 8; If we try to run above the line, it will give TypeError: Assignment to constant variable . Constants are immutable, meaning their value cannot change.\nHere comes the keyword let which allows the value to be mutable (meaning it can change).\nlet a = 4; a = 8; The above line will run without error.\nComments Comments are an important part of programs. Writing good comments is also necessary to be a good programmer and to write clean code.\nComing up with good variable names is also important.\nconst value = 99; const price = 99; Both hold the same value 99 but price is more descriptive.\nComments are only for humans to understand code in a better way. We can write single-line or multi-line comments.\n// this is price in U.S. Dollars const price = 99; /* The price of all items Denominated in U.S. Dollars */ const price = 99; Functions A function is a reusable code and it returns an output. The function must be defined before calling it. Function call means to execute the function. The word invoke is also used and the meaning is the same as call.\nWhen a function is called, It means you\u0026rsquo;re passing specific input values.\nconst output = addOne(5); In the code above, addOne is the function and parenthesis ( ) is used to call the function. We are passing in an input value 5 into our function addOne.\nIt is not mandatory to have input values in the function. See the below example.\nconst message = getMessage(); In order to call a function, we must first define it!\nfunction addOne(input) { return input + 2; } In the above code, we are creating a function called addOne which takes one input called input. We are returning the input plus two.\nfunction getMessage() { return \u0026#34;Hello World!\u0026#34;; } In the above code, function getMessage does not take input. We are simply returning a string, saying \u0026ldquo;Hello World!\u0026rdquo;. The return statement will return the desired output of the function.\nconst a = addOne(2); Variable a is now assigned to the return value of the addOne function invoked with an input of 2, which evaluates to 4.\nConclusion Ending with an extra bit of information about JavaScript functions\u0026hellip;\nIf we define/declare a function once, it can be called elsewhere in the program.\nToday I learned about Mutable let, Comments, and Functions in JavaScript.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/javascript-fundamentals-mutable-letcomments-functions/","summary":"Today is the 2nd day of my #100DaysOfCode journey with JavaScript.\nI am going to write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!🫱🏼‍🫲🏼\nThis Article is a part of the JavaScript Fundamentals series.\nMutable let We worked on variables in the last section and now going further with variables, how can we change the stored value inside of a variable?","title":"JavaScript Fundamentals: Mutable let,Comments, Functions"},{"content":"After exams and lots of procrastination, I finally resumed my #100DaysOfCode journey with JavaScript. Today is the 1st day of my journey and learned some basic concepts of JavaScript.\nI am going to write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!🫱🏼‍🫲🏼\nIntroduction to JavaScript The foundation of contemporary online apps is JavaScript. Although that may sound pretentious or flowery, it is also the reality. JavaScript powers the contemporary web, your contemporary servers, and even the development environments on our computers. Whether it is web 2.0 or web 3.0, JavaScript is used everywhere.\nNumber Variable A JavaScript variable is nothing more than a name for a storage area. In JavaScript, there are two different sorts of variables: local variables and global variables. When declaring a JavaScript variable, there are several guidelines (also known as identifiers).\nThe name must begin with an alphabetical letter (from A to Z), an underscore (_), or a dollar sign ($).\nThe first letter can be followed by any number from 0 to 9, such as the value 1.\nJavaScript variables are case-sensitive; for instance, the variables x and X are distinct.\nJavaScript variables are written in lowerCamelCase. for example const isLoggedIn = true;\nJavaScript cares about variables in one word (not separated by space).\nWe store values in something called a variable.\nconst a = 5\nIn the above code, a is the variable. Number 5 is the value to be stored in a and const is a keyword used to declare a as a constant value in JavaScript.\nMultiple Variables JavaScript programs run line by line, the line const a = 5 is called a statement. In JavaScript, statements should end with ; (semi-colon). In some cases, JavaScript automatically inserts semi-colons in a statement. The best practice is to insert ; at every statement end.\nWe can create another variable to store the value of the previous variable.\nconst a = 5;\nconst b = a;\nBoth a and b will store the value 5.\nBooleans A JavaScript Boolean represents one of two values: true or false.\nconst loggedIn = false;\nIf a user is logged in the above line, the false indicated that they are not.\nWe can also store boolean values inside variables. If we have to store true in one variable and false in another variable, then:\ncont a = false;\nconst b = true;\nQuotes Both single ' ' and double \u0026quot; \u0026quot; quotes can be used when declaring JavaScript strings.\nHere, we used double quotes so we could use a single quote inside the message:\nconst message = \u0026quot;Hello, hope you are doing fine!\u0026quot; ;\nIf we needed to use double quotes:\nconst message = 'Then he said, \u0026quot;Hey, are you coming home?\u0026quot;';\nIf we needed to use a double quote inside double quote string, we can use a backslash \\ as an escape character:\nconst message = \u0026quot;This is double-quote \\\u0026quot; inside double-quotes\u0026quot;;\nStrings Strings in JavaScript are used to store and modify text. A string in JavaScript is zero or more characters enclosed in quotes.\nStrings are nothing but a bunch of characters (a, b, c) put together.\nIn JavaScript, there are three ways to define a string. first two of them are:\nconst a = \u0026quot;Hello!\u0026quot;;\nHere, myName and anotherName uses two different types of quotes, single and double. We can use either one or inside of each other.\nconst myName = 'Anand';\nconst anotherName = \u0026quot;Vishal\u0026quot;;\nNow look at the third method to declare strings:\nconst helloMessage = `Hello ${myName}, my name is ${anothername}!`;\nHere, helloMessage variable uses backticks ` . With backticks, we can add values inside the strings. The ${variable} is about this. In the above line of code, we are taking value from myName and anotherName and placing them into strings. The variable helloMessage now contains \u0026quot;Hello Anand, my name is Vishal!\u0026quot;\nConclusion Ending with an extra bit of information about JavaScript\u0026hellip;\nJavaScript also uses upper snake case sometimes like const SERVER_KEY_VALUE = \u0026quot;abcdefg\u0026quot;; This casing is typically reserved for environment variables or values that are needed to be determined before code executions. Like, if you have some secret key that you want to store on the server but not on the local machine, then You might keep that variable tucked away on the server in an environment variable that will require permissions to access or change. These are the types of variables we\u0026rsquo;ll often see with this casing.\nToday I learned about Number variables, multiple variables, booleans, quotes and strings in JavaScript.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/javascript-fundamentals-number-variable-multiple-variables-booleans-strings/","summary":"After exams and lots of procrastination, I finally resumed my #100DaysOfCode journey with JavaScript. Today is the 1st day of my journey and learned some basic concepts of JavaScript.\nI am going to write about my learnings in an explained way through my blogs and socials. If you want to join me on the learning journey, make sure to follow my blogs and social and share yours too. Let\u0026rsquo;s learn together!","title":"JavaScript Fundamentals: Number Variable, Multiple Variables, Booleans, Strings"},{"content":"Hey Folks! Long time no see. 2022 is going to end in a few days. In this article, I am going to talk about myself, what I achieved, and my failures this year.\n**2023 is already knocking at the doors!**🎅🏼\nIt\u0026rsquo;s time to celebrate the past year\u0026rsquo;s achievements and learn from the mistakes of 2022. Thanks to Hashnode for organizing the \u0026ldquo;Dev Retro 2022\u0026rdquo; campaign.\nAchievements🎉 Blogs Published 6 Articles on my Blog this year. Not a great number but I am happy with not quitting due to lack of ideas and time.\nWriting is something that made me explore things I didn\u0026rsquo;t even think of. Tech Twitter has changed my life very much, So much to learn from there, seeing good folks there and learning from them is great. Sometimes article ideas just come from Twitter and a little bit of research is over the top of it.\nHere are my 6 Articles written in 2022, You can check them:\n15 Recommended Books For Computer Science Students\nMake Your GitHub Profile Standout To Attract Better Opportunities\nSome Useful GitHub Repositories To Enhance Your Web3 Skills\nLearn and Explore Low-Code / No-Code Stack by Involving in These Communities\nHacktoberfest 2022: Win Swags for Quality Contributions\nCreating Personal Blog With Hugo and Netlify\nOpen Source Contributions Participated in GirlScript Summer of Code 2022 as a project admin and helped fellow contributors to get into open source while collaborating on a web development-based repository containing more than 100 mini projects.\nYou can check out the repository in this GitHub organization\nOpportunities \u0026amp; Rewards I got a paid guest writer role from a no-code platform due to my blogs. It\u0026rsquo;s a thing that I never thought of a year back. But after this, I am more confident in my writing than I ever was.\nI also got nominated for \u0026quot;THE NOONIES 2022\u0026quot; in 4 categories out of which I am the runner-up for 3 categories. THE NOONIES is a tech award given by Hackernoon each year to bloggers and creators from different categories.\nCheck it out here:\nHackerNoon Contributor of the Year- BOOKS\nHackerNoon Contributor of the Year- JOB-HUNTING\nHackerNoon Contributor of the Year- DEVELOPER\nHackerNoon Contributor of the Year- GitHub\nFailures🚨 Honestly, I am not happy with my 2022 work and learning.\nNot finishing what I started to learn, be it DSA or Web development. Not written as many blogs as I planned a year back. Lots of mismanagement happened due to shifts in my college work. I had online classes till the first half of 2022 and after that, I got to attend offline classes. this messed up my whole planning and I wasn\u0026rsquo;t able to manage it well.\nMistakes are never meant to be repeated and I am keeping them in check from now on. Offline classes and semester exams had taken lots of time and mismanagement adds fire to that. I can\u0026rsquo;t repeat these mistakes in 2023. I didn\u0026rsquo;t compete for my bigger goal this year.\n2023 Goals🎯 I am not aiming too high for the next year\u0026hellip;\nJust want to finish what I started to learn.\nWill contribute to open source on a more regular basis.\nWriting articles more often.\nFinding Internships or Technical writing opportunities.\nWrap🧵 It\u0026rsquo;s time to learn from mistakes than get into repentance. This time with proper time management. I know now that my classes are offline and learning will be planned accordingly. My Internship season is approaching soon and I have to be ready for that. Lots of things to be achieved but have to go one step at a time.\nI am going to be more active this time on Twitter and will continue to load my Instagram with lots of Tech content. Will be learning \u0026amp; creating content in public.\nLots of good content in 2023!👍🏼\n🫱🏼‍🫲🏼Let\u0026rsquo;s Connect\nShowwcase \u0026mdash; Instagram\nHow was yours? Let me know in the comments!\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/astrodevil-year-wrap-dev-retro/","summary":"Hey Folks! Long time no see. 2022 is going to end in a few days. In this article, I am going to talk about myself, what I achieved, and my failures this year.\n**2023 is already knocking at the doors!**🎅🏼\nIt\u0026rsquo;s time to celebrate the past year\u0026rsquo;s achievements and learn from the mistakes of 2022. Thanks to Hashnode for organizing the \u0026ldquo;Dev Retro 2022\u0026rdquo; campaign.\nAchievements🎉 Blogs Published 6 Articles on my Blog this year.","title":"Astrodevil's 2022 Wrapped: Dev Retro 2022"},{"content":"In this Article! I am going to share the step-by-step method I followed while building a blog website using a static site generator Hugo and deploying it to Netlify. I encountered some small errors during the process, I am gonna entertain those as well. Let\u0026rsquo;s get started.\nAs I am using windows, commands may be different, follow official docs while building your own website using Hugo. Also, I am running all commands on git bash.\nStep 1 Create any folder on Desktop and open git bash. Now time to install hugo.\nchoco install hugo -confirm Or if you need the “extended” Sass/SCSS version: for some supported theme. Better install it from cmd by running it as administrator.\nchoco install hugo-extended -confirm Step 2 Now it\u0026rsquo;s time to create a new website and add a cool theme to it. You can choose any theme from the Hugo theme library. Run below commands.\n// Choose your site name in place of blognerd\rhugo new site blognerd The above will create a new Hugo site in a folder named blognerd.\nIt\u0026rsquo;s time to add theme to the site. See theme library for a list of themes to consider. I am using Beautiful Hugo theme.\ncd blognerd\rgit init You can access GitHub repo of themes by just clicking download button on theme page as you can see in above picture. Now, download the theme from GitHub and add it to site\u0026rsquo;s theme directory.\ngit submodule add https://github.com/halogenica/beautifulhugo.git themes/beautifulhugo Now, add the theme to the site configuration:\necho theme = \\\u0026#34;beautifulhugo\\\u0026#34; \u0026gt;\u0026gt; config.toml Step 3 It\u0026rsquo;s time to add some contents to the newly created site. You can also add them manually but I am creating this using commands.\nhugo new posts/my-first-post.md Now open the whole folder in any code editor, I am using VS Code and edit your post as you wish. You can see the screenshot of mine editor below for reference of posts files.\nAbove contents may be different for the theme you are using. I am going to add one of my article contents to this post for example, see below screenshot. You can edit metadata between --- accordingly.\nStep 4 Now, is the time to test the site we created by running Hugo server.\nhugo server -D //run only this command Start building sites …\rhugo v0.105.0-0e3b42b4a9bdeb4d866210819fc6ddcf51582ffa+extended windows/amd64 BuildDate=2022-10-28T12:29:05Z VendorInfo=gohugoio\r| EN\r-------------------+------\rPages | 10\rPaginator pages | 0\rNon-page files | 0\rStatic files | 184\rProcessed images | 0\rAliases | 2\rSitemaps | 1\rCleaned | 0\rBuilt in 4884 ms You can check live view on http://localhost:1313/\nhere\u0026rsquo;s mine live view\u0026hellip; Step 5 It\u0026rsquo;s time to give final touch to the newly created site. You can customize theme or configure site by opening up config.toml in a text editor and edit accordingly. In this theme I took help from their GitHub readme.\nNow, time to build static site. Run below command after closing hugo server by pressing Ctrl+c\nhugo -D //run only this command\rStart building sites …\rhugo v0.105.0-0e3b42b4a9bdeb4d866210819fc6ddcf51582ffa+extended windows/amd64 BuildDate=2022-10-28T12:29:05Z VendorInfo=gohugoio\r| EN\r-------------------+------\rPages | 16\rPaginator pages | 0\rNon-page files | 0\rStatic files | 184\rProcessed images | 0\rAliases | 5\rSitemaps | 1\rCleaned | 0\rTotal in 763 ms Step 6 Everything is now set. You can add more blog contents or customize the site according to your requirement. Now the final work is to deploy it to Netlify.\nI have Netlify CLI installed so I am going to the final step, You can install it by going to Netlify official docs and login to your account.\nAfter installing, run following commands:\nnetlify dev It will open Netlify live server on http://localhost:8888. After checking everything on your site, close netlify server by pressing Ctrl+c. Time to deploy..\nnetlify deploy //run only this command This folder isn\u0026#39;t linked to a site yet\r? What would you like to do? (Use arrow keys)\r\u0026gt; Link this directory to an existing site\r+ Create \u0026amp; configure a new site Follow the instruction and select (.) directory. Now deploy production.\nnetlify deploy --prod\r// select public directory Hurray! Now you can access your live website with Netlify domain from Netlify dashboard. I have created one other site and it\u0026rsquo;s deployed, check my live website here\u0026hellip;\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/creating-personal-blog-with-hugo-and-netlify/","summary":"In this Article! I am going to share the step-by-step method I followed while building a blog website using a static site generator Hugo and deploying it to Netlify. I encountered some small errors during the process, I am gonna entertain those as well. Let\u0026rsquo;s get started.\nAs I am using windows, commands may be different, follow official docs while building your own website using Hugo. Also, I am running all commands on git bash.","title":"Creating Personal Blog With Hugo and Netlify"},{"content":"I am pretty sure you all are familiar with full-stack, MERN stack, and many similar tech stacks related to development. But I will not talk about it because lots of content are already there. I am going to tell you about the \u0026ldquo;No-Code /Low-Code stack\u0026rdquo; a new trend in tech and how you will master this new tech by involving in related communities.\nWhat is Low-Code / No-Code Stack? This tech stack is nothing but a complete knowledge of Low-Code / No-Code tools and platforms for different stages or processes of software development. Like planning, designing, building, deploying, and launching a fully functional product. It\u0026rsquo;s a new trend, many developers are working in this field and new platforms are coming around low code like Notion or Zapier. If you are not from a tech background and do not want to go deep with coding, You can consider learning this low-code / no-code tech stack and make wonders happen.\nIf you don\u0026rsquo;t know about low-code / no-code. Read my article about it. Here\nIf you want to know about some low-code / no-code tools and platforms. Read my article about it. Here\nExplore Low-Code / No-Code Stack by Involving in These Communities As you know communities are very important in the tech world, as it helps in many ways. Communities are the best place to find the right solution, You will learn about the true meaning of networking, which goes beyond just following each other on Twitter and connecting on LinkedIn. Communities also help in boosting your capacity for technological proficiency and many more good things. Like finding jobs and helping you in choosing the right step. Communities can be free or paid.\nLet\u0026rsquo;s see some good low-code / no-code communities.\n1. 100 days of No Code 100 Days of No Code is a global collective of no-code learners. People from many backgrounds have gathered in this location to learn, connect, and share their knowledge. It has more than 5,000 learners who are bringing their ideas to life. In just 30 minutes a day, you can learn how to use no-code from scratch with the help of some entertaining and helpful bite-sized courses. Both free \u0026amp; paid memberships are available.\n2. NoCodeDevs The largest collection of no-code tools, applications, and resources available. In the NoCodeDevs community, business owners may find fresh tips and methods for implementing their ideas without writing code and connect with other makers to assist one another in the creation process. Join this community of 20,000+ non-tech founders, 300+ tool directories, and 150+ tutorials. Live workshops and events are also organized.\n3. Makerpad Ben Tossell founded the Makerpad community in 2019, and it is dedicated to providing no-code education for creating applications and websites, managing online businesses, and automating operations without writing code. Makerpad is free to sign up for, but in order to access premium features, you must buy a membership plan. Members of the Makerpad community can also make their professional profiles public to draw clients looking for specialized assistance with their no-code projects.\n4. NoCodeFounders This is a well-known online network for innovators, makers, solopreneurs, and business people without technical backgrounds. More than 13,000 people are involved. Members take part in online gatherings and activities where they make new relationships and get knowledge about the best no-code platforms. You must pay a one-time cost of $99 to sign up as a premium user. Access to the Slack community, filter unlocks, exclusive tutorials and benefits with unmatched insights into the no-code landscape are all included with membership.\n5. Webflow Community Connect with the 75,000+ members who are developing the future of visual development and contributing to Webflow. Connect with entrepreneurs, product and project managers, business owners, designers, founders, marketers, and developers from businesses of all sizes and sectors. Webflow is a low-code website builder.\n6. Nucode Nucode is a community of makers and inventors. There are almost 7000 members in total. You can learn to use tools like Webflow, Glide, and Bubble for nothing! Together, anyone can grow and learn in this amazing space. Your fellow creators can offer you suggestions based on their experience as you submit your knowledge. You can set a challenge for other non-coders to create apps for challenging situations in order to promote a sense of competition in addition to learning.\n7. No-Code Alley Citizens who are no-code developers can connect on a discussion board set up by No-code Alley to solve their business issues. You can discover the top no-code products, their applications, and helpful hints. Additionally, there are specific forums like Stack Overflow where you can post specific queries and get responses from other non-coders.\n8. Nocode HQ The Nocode HQ community provides a network where developers can talk about problems facing the industry and work together to find innovative solutions. The learning environment provided by the platform includes step-by-step lessons, templates, and expert sessions. You can connect with people who are creating similar items to gain assistance and feedback by hosting a network with social media capabilities.\nJoining is free, and it gives you access to a few resources and a place in the community. In addition, you can choose premium membership by paying a monthly charge of $29 for it. You get access to limitless tutorials, premium templates, and cost-free Nocode sessions with a premium membership.\n9. NoCodeList The tools and resources needed to build your own no-code product are all collected in one place by No Code List. No Code List also includes No Code Agencies that can assist you in creating no-code goods or services. Numerous other no-code forums, channels, blogs, tutorials, courses, websites, etc. are included in their Resources area. If you sign up, four new tools will be delivered to your inbox every Friday.\n10. Codem4p Clients looking to hire specialists, companies, and independent freelancers can connect through this network. If you are a no-coder looking to work for respected businesses, this is the place for you. You can also interact with your peers, present your work, learn, and get feedback. You also gain access to premium events, professional resources, expert sessions, and discussions about various tools.\nHire the best personnel for automation, no-code, low-code, and remote work. Develop software up to 10 times faster, automate tasks, and launch it in a few of weeks by learning no-code.\nI hope you find this article helpful! If you know some other communities, let me know on Twitter.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/learn-and-explore-low-code-no-code-stack-by-involving-in-these-communities/","summary":"I am pretty sure you all are familiar with full-stack, MERN stack, and many similar tech stacks related to development. But I will not talk about it because lots of content are already there. I am going to tell you about the \u0026ldquo;No-Code /Low-Code stack\u0026rdquo; a new trend in tech and how you will master this new tech by involving in related communities.\nWhat is Low-Code / No-Code Stack? This tech stack is nothing but a complete knowledge of Low-Code / No-Code tools and platforms for different stages or processes of software development.","title":"Learn and Explore Low-Code / No-Code Stack by Involving in These Communities"},{"content":"As the world is moving towards new technology, Web3 is the most trending of them. Developers are learning this new technology very fast, many companies are also shifting towards decentralized blockchain technology. To become a good web3 developer one need good skills related to tech, and for that, they will need practical knowledge of web3 technologies. Like working on or making projects based on blockchain.\nIn this article, I am going to share ** Some Useful GitHub Repositories you can contribute** to and enhance your practical knowledge of web3 technologies.\n1. 100 Days Of Web3 This is a list of Tons of Free Web3 Resources.\nThis is primarily for Ethereum Developers, but many concepts are shared among different Blockchain or involve different blockchains.\n2. Awesome Solidity ⟠ A curated list of awesome Solidity resources, libraries, tools and more.\n3. Gun An open source cybersecurity protocol for syncing decentralized graph data. GUN is a toolkit that allows you to create community-run and encrypted applications, such as an Open Source Firebase or a Decentralized Dropbox. GUN is in use by the Internet Archive and hundreds of other apps. Twitter\u0026rsquo;s Bluesky program includes GUN!\n4. Web3 Ui A React UI library for Web3. A library of UI components specifically crafted for web3 use cases.\n5. Metamask Mobile Mobile web browser providing access to websites that use the Ethereum blockchain.\n6. Nucypher A decentralized threshold cryptography network focused on proxy reencryption.\n7. Nft Api NFT API that returns resolved metadata and has all information about all NFT collections, users, transactions. Cross-Chain NFT API.\n8. Matic.js This repository contains the maticjs client library. maticjs makes it easy for developers, who may not be deeply familiar with smart contract development, to interact with the various components of Matic Network.\nThis library will help developers to move assets from Ethereum chain to Matic chain, and withdraw from Matic to Ethereum using fraud proofs.\n9. Blockchain Books A collection of blockchain books to help people learn and become Awesome.\n10. web3 Making sense of web3 \u0026amp; crypto. Introduction to key concepts and ideas. Rigorous, constructive analysis of key claims pro and con. A look at the deeper hopes and aspirations.\n11. Learn Web3 Dapp This Next.js app is designed to be used with the Figment Learn Pathways, to help developers learn about various blockchain protocols such as Solana, NEAR, Secret, Polygon and Polkadot!\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/some-useful-github-repositories-to-enhance-your-web3-skills/","summary":"As the world is moving towards new technology, Web3 is the most trending of them. Developers are learning this new technology very fast, many companies are also shifting towards decentralized blockchain technology. To become a good web3 developer one need good skills related to tech, and for that, they will need practical knowledge of web3 technologies. Like working on or making projects based on blockchain.\nIn this article, I am going to share ** Some Useful GitHub Repositories you can contribute** to and enhance your practical knowledge of web3 technologies.","title":"Some Useful GitHub Repositories To Enhance Your Web3 Skills"},{"content":"GSSoC stands for GirlScript Summer of Code. It is a three-month-long Open-Source Program conducted by the GirlScript Foundation for beginners. This year I am selected as project admin for the program. (GSSOC'22)\nIn this article, I am going to share my experiences from being a contributor in an open-source program to the project admin \u0026amp; mentor of one.\nHow I started? My first open-source contribution was to a friend\u0026rsquo;s repository. After doing some small contributions I came to know about GSSoC program and I took part in it. This was the first big contribution from my side to any open source project. Before that, I had some experience contributing to EbookFoundation / free-programming-books. From that, I learned to communicate over issues and to make pull requests properly. This previous work helped me a lot during GirlScript Summer of Code.\nWhat I Learned? Successful contributions during the program definitely acted as a confidence booster for me. Now, I was more confident to work on any open-source project. While contributing I went through some issues and pull requests where project maintainers were discussing things and I tried to understand their workflow, and how they manage things.\nAfter some time, I decided to take part as a project admin in an open-source program. Hacktoberfest was the best time to do so because many newbies were going to start their open source contributions in the month of October.\nWhat Next? I had created a repository to host small JavaScript projects. It was for personal use first but after the decision of participating as a project admin, I created a GitHub organization ZeroOctave and added the same repository inside that. Hacktoberfest was going to start so I thought of taking my chances and as expected some good contributions were added to the repository. I was enjoying my role as a maintainer while guiding contributors for the contribution to my repository.\nJust after Hacktoberfest, some more open-source programs were going to start so I applied with my repository and got accepted in two of them. Those programs were Infinite Clone Conspiracy \u0026amp; DWoC'21. These programs were not big enough to attract many contributors but still some good projects were added to our repository and some new members also joined the GitHub organization.\nGSSoC! GSSoC stands for Google GirlScript Summer of Code. As I mentioned earlier, GSSoC'21 acted as the starting step for my open source journey. After 1 year when another version of GSSoC came back, I decided to participate in my project this time. I filled out the registration form with my organization and project details and got selected as project admin. It\u0026rsquo;s a 3-month long program currently going on, many new contributions are coming into our organization repository. ZeroOctave Javascript Projects is our project repository that is the part of GSSoC'22. Till now 200+ issues created and 200+ pull requests merged.\nWhile doing my work as project admin and coordinating with my project maintainers, I am also focused on enhancing my tech skills. So that I can contribute to some good open-source projects out there.\nInvitation For You! If you are a beginner, you are welcome to contribute to our organization. If you are an active open source contributor or maintainer, you are welcome to join ZeroOctave. Join zeroOctave to add your projects, guide newbies or write articles related to open source.\nInvitation Links\nJoin ZeroOctave GitHub Organization Contribute In Projects Join ZeroOctave Blog Team If You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/girlscript-summer-of-code-learning-and-experiences/","summary":"GSSoC stands for GirlScript Summer of Code. It is a three-month-long Open-Source Program conducted by the GirlScript Foundation for beginners. This year I am selected as project admin for the program. (GSSOC'22)\nIn this article, I am going to share my experiences from being a contributor in an open-source program to the project admin \u0026amp; mentor of one.\nHow I started? My first open-source contribution was to a friend\u0026rsquo;s repository. After doing some small contributions I came to know about GSSoC program and I took part in it.","title":"GirlScript Summer of Code Learning And Experiences: From Contributor To Project Admin"},{"content":"To screen candidates, the industry is shifting away from resumes and toward GitHub profiles. In the software industry, Open Source projects are widely regarded now. How can recruiters know that the abilities you claim to have are truly the skills you have? When you\u0026rsquo;re a fresher with no professional experience open-source contributions come in useful. Without any prior industry expertise, GitHub allows you to exhibit your work. As a result, it\u0026rsquo;s important to make GitHub Profile stand out and present the best version of yourself.\nIn this article, I am shedding light on tips to Make Your GitHub Profile Standout To Attract Better Opportunities.\nIntroduction! The above screenshot is of my GitHub profile. I have mentioned my bio in a detailed manner, including contribution graphs, badges, tech stack, proper name, username, profile picture, social handles, and my side hustles. You can also create your GitHub profile like mine or even better. Isn\u0026rsquo;t my profile more detailed and attractive than resume? I hope after seeing the above screenshot you also want to make your GitHub profile stand out. Let\u0026rsquo;s get started!\nFoundation Stone As you know already, the repository is the main feature of GitHub where every project, content, code is stored properly.\nLet\u0026rsquo;s start by creating a special repository after signing in to your GitHub account. This repository name must be same as your GitHub username.\nThis is a ✨special ✨ repository that you can use to add a README.md to your GitHub profile. Make sure it’s public and initialize it with a README or create a README.md file inside this repository to get started.\nMarkdown will be used to add contents and details in README file. Learn Markdown syntax from this cheetsheet. README files are commonly used to write documentation for the project repositories.\nIt\u0026rsquo;s time to add contents in your profile README.\nHeader In the header, you can add your name, greet message, photo or gif, or nothing according to your choice. I am using my profile-related codes, you can change accordingly.\n# Hi, I\u0026#39;m Astrodevil \u0026lt;img src=\u0026#34;https://github.com/TheDudeThatCode/TheDudeThatCode/blob/master/Assets/Hi.gif\u0026#34; width=\u0026#34;29px\u0026#34;\u0026gt; About In the About section you can add your little introduction, What you are working on, What are your goals or something like that.\n# replace contents according to you.\r\u0026lt;table\u0026gt;\r\u0026lt;tr\u0026gt;\r\u0026lt;td valign=\u0026#34;center\u0026#34;\u0026gt;\r🎓 I am currently pursuing my **Bachelor\u0026#39;s in Computer Science Engineering**.\r🌱 I am currently learning **Java** and also interested in **Web Development**.\r🎯 My Goal is to Contribute to as many **open source project** as possible.\r✨ I love to create different types of **contents**.\r\u0026lt;td \u0026gt;\r# this is my daily.dev card, you can edit this accordingly\r\u0026lt;a href=\u0026#34;https://app.daily.dev/Astrodevil\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;https://api.daily.dev/devcards/81fef2c2311f4739a063dbde61b40fe2.png?r=1fr\u0026#34; width=\u0026#34;300\u0026#34; alt=\u0026#34;Mr. Ånand\u0026#39;s Dev Card\u0026#34;/\u0026gt;\u0026lt;/a\u0026gt;\r\u0026lt;/td\u0026gt;\r\u0026lt;/tr\u0026gt;\r\u0026lt;/table\u0026gt; Contribution Graph I have added a contribution graph banner to update daily activity from my GitHub profile. It\u0026rsquo;s a nice way to showcase if you are active frequently and doing some contributions in projects. This graph is updating daily automatically.\n# replace username with your own or change theme\r![GitHub Activity Graph](https://activity-graph.herokuapp.com/graph?username=#your-username\u0026amp;theme=dracula\u0026amp;hide_border=true) Icons \u0026amp; Badges Adding social handles on GitHub profile is the best way to connect with peoples and transfer more audience towards your socials. You can use badges for that or icons. You can create badges from shields.io and also use icons from flaticon. There are tons of site to find attractive icons. You can also add information about your tech stack and tools you are familiar with by using badges and icons. Stats Card Adding Stats cards to your GitHub page is another common profile enhancement. This is a simple method to display all of your GitHub statistics in a fun, visual way. You can also track your GitHub Streak.\n# replace username with your own or change theme\r## Stats📈\r\u0026lt;p align=\u0026#34;center\u0026#34;\u0026gt;\r\u0026lt;img width=\u0026#34;40%\u0026#34; src=\u0026#34;https://github-readme-stats.vercel.app/api/top-langs?username=#your-username\u0026amp;show_icons=true\u0026amp;theme=dracula\u0026amp;title_color=ff8000\u0026amp;text_color=ffffff\u0026amp;bg_color=6a6a6a\u0026amp;locale=en\u0026amp;layout=compact\u0026amp;hide_border=true\u0026#34; alt=\u0026#34;#your-username\u0026#34; /\u0026gt; \u0026lt;img width=\u0026#34;48%\u0026#34; src=\u0026#34;https://github-readme-stats.vercel.app/api?username=#your-username\u0026amp;show_icons=true\u0026amp;theme=dracula\u0026amp;title_color=ff8000\u0026amp;text_color=ffffff\u0026amp;bg_color=6a6a6a\u0026amp;locale=en\u0026amp;hide_border=true\u0026#34; alt=\u0026#34;#your-username\u0026#34; /\u0026gt;\r\u0026lt;img width=\u0026#34;48%\u0026#34; src=\u0026#34;https://github-readme-streak-stats.herokuapp.com/?user=#your-username\u0026amp;theme=highcontrast\u0026amp;hide_border=true\u0026#34; alt=\u0026#34;#your-username\u0026#34; /\u0026gt;\r\u0026lt;/p\u0026gt; These are the basic customization method that can make your GitHub profile stand out, I used my profile as an example to explain above. You can also add more customization in your GitHub profile README to make it detailed and attractive. Let\u0026rsquo;s see that in next section.\nBuilding You can also track your activity and showcase it on your profile README by using a GitHub Action Scripts. Just create /.github/workflows/update-readme.yml inside the repository and paste below code inside update-readme.yml file. This script updates activity every 30 minutes. name: Update README\ron:\rschedule:\r- cron: \u0026#39;*/30 * * * *\u0026#39;\rworkflow_dispatch:\rjobs:\rbuild:\rruns-on: ubuntu-latest\rname: Update this repo\u0026#39;s README with recent activity\rsteps:\r- uses: actions/checkout@v2\r- uses: jamesgeorge007/github-activity-readme@master\renv:\rGITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} Add this block to README.md file where you want to showcase your recent activity\n\u0026lt;!--START_SECTION:activity--\u0026gt;\r\u0026lt;!--END_SECTION:activity--\u0026gt; You can also add your blogs and side hustles on your profile README by manually adding it or automating the tasks by using GitHub Actions. Check this article to know more about helpful actions. You can impress recruiters by showcasing your awesome side hustles. Final Touch If you don\u0026rsquo;t want to learn Markdown or don\u0026rsquo;t have enough time to write from scratch. You can use GitHub Profile README Generator, GPRM or readme generator to create your profile README.\nYou can also take inspiration from other profiles by copy-pasting markdown codes in your README to customize accordingly. Here are the example profiles you can take inspiration from.\nI hope, This will help you to make your GitHub profile stand-out! What are you waiting for? Now go create your own profile README and open a world of opportunities for yourself. Check out my GitHub🤝\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/make-your-github-profile-standout-to-attract-better-opportunities/","summary":"To screen candidates, the industry is shifting away from resumes and toward GitHub profiles. In the software industry, Open Source projects are widely regarded now. How can recruiters know that the abilities you claim to have are truly the skills you have? When you\u0026rsquo;re a fresher with no professional experience open-source contributions come in useful. Without any prior industry expertise, GitHub allows you to exhibit your work. As a result, it\u0026rsquo;s important to make GitHub Profile stand out and present the best version of yourself.","title":"Make Your GitHub Profile Standout To Attract Better Opportunities"},{"content":"We are in the modern world where the digitization of education is already going on. Now lots of blogs, articles are there on the internet to learn from. But Book has its own value, the author puts his all knowledge experience and time to write one whole book. The knowledge and details you get from a book are very precious.\nIn this article, I am going to discuss 15 Recommended Books For Computer Science Students\n1. Clean Code: A Handbook of Agile Software Craftsmanship Because it\u0026rsquo;s more approachable, especially for inexperienced developers, Clean Code is one of the most regularly seen books on a programmer\u0026rsquo;s desk. Clean Code focuses on tactical ideas, such as how to build classes and functions, rather than high-level procedures.\n2. Head First Java Learning a difficult new language, especially an object-oriented computer programming language like Java, is no simple undertaking. You could believe the issue is with your mind. It appears to have its own mind, one that doesn\u0026rsquo;t always want to take in the dry, technical information you\u0026rsquo;re required to learn. This book is like bible for java beginners.\n3. Java: The Complete Reference In \u0026ldquo;Java: The Complete Reference, Eighth Edition,\u0026rdquo; popular programming author Herb Schildt covers all you need to know about writing, building, debugging, and running Java programmes. This comprehensive volume covers the whole Java language, including syntax, keywords, and core programming concepts, and has been updated for Java Platform, Standard Edition 7 (Java SE 7). You\u0026rsquo;ll also learn about the key components of the Java API library. Swing, JavaBeans, servlets, and applets are all addressed, with real-world examples to demonstrate how they function. Try-with-resources, strings in switch, type inference with the diamond operator, NIO.2, and the Fork/Join Framework are all covered in detail.\n4. Cracking the Coding Interview Cracking the Coding Interview is well worth your time and money if you\u0026rsquo;re ready to start interviewing with FAANG firms. Everything from the interview procedure to unique scenarios, pre-interview preparation to behavior questions, Big O to technical questions, and 189 real-world programming problems are covered.\n5. Introduction to Algorithms This book examines a wide range of algorithms in depth while making their creation and analysis accessible to readers of all levels. Each chapter is self-contained and can be utilized as a study unit on its own. The algorithms are given in English and pseudocode that anyone who has done some programming may understand. Without losing the depth of information or mathematical rigor, the explanations have been kept simple.\n6. Data Structures And Algorithms Made Easy \u0026ldquo;Data Structures And Algorithms Made Easy: Data Structures and Algorithmic Puzzles\u0026rdquo; addresses questions about complex data structures and algorithms. Because each problem has several solutions and the book is written in C/C++, it may be used as an interview and test preparation tool for computer scientists. Easy Data Structures and Algorithms: Data Structures and Algorithmic Puzzles is a collection of solutions to a variety of difficult problems involving data structures and algorithms. Any expert in computer science will find it useful. It may be used as a reference manual for computer science professionals. This book will assist you in preparing for campus interviews, exams, and employment. In a word, this book presents solutions to a wide range of challenging data structures.\n7. The Algorithm Design Manual The \u0026ldquo;mystery\u0026rdquo; of building algorithms and measuring their usefulness and efficiency is removed in this substantially extended and updated third edition of the best-selling classic. The book currently serves as the fundamental textbook for algorithm design classes, while also serving as the foremost practical reference guide on algorithms for programmers, researchers, and students, with updates to the first and second editions.\nThe user-friendly format The Algorithm Design Manual makes combinatorial algorithms technology accessible to anybody, with a focus on design rather than analysis. The first section, Techniques, explains how to develop and analyse computer algorithms in a clear and understandable manner. The second section, Resources, has a library of algorithmic resources, implementations, and a wide bibliography for browsing and reference.\n8. Eloquent JavaScript Eloquent JavaScript goes beyond the cut-and-paste scripts found in recipe books to teach you how to write elegant and effective code. Variables, control structures, functions, and data structures are among the first programming concepts you\u0026rsquo;ll study. After that, you\u0026rsquo;ll dive into JavaScript\u0026rsquo;s higher-order functions, closures, and object-oriented programming.\nYou\u0026rsquo;ll learn how to: Understand the principles of programming and best practises. By combining the capabilities of functional and object-oriented programming, regular expressions may be used to quickly analyse and edit text. Errors and browser incompatibilities should be handled compassionately. Handle browser events and DOM modifications.\n9. Let Us C The book\u0026rsquo;s simplicity and storytelling style set it out from the packed shelves of C Programming books. These two characteristics have been present in all six prior versions of this book. Today\u0026rsquo;s C programmer must not only learn the language\u0026rsquo;s complexity and nuances, but also deal with its use in systems such as Windows and Linux. This book does an excellent job of covering all three areas of C programming.\n10. Head First Design Patterns This book teaches you the patterns that matter, when and why to use them, how to apply them to your own ideas, and the object-oriented design concepts that underpin them. Join the hundreds of thousands of developers who have used Head First Design Patterns to enhance their object-oriented design abilities.\n11. The Basics of Bitcoins and Blockchains Learn about the history and fundamentals of cryptocurrencies and blockchains: There is a wealth of information available about bitcoin and blockchains. However, most of this information may be incomprehensible to the untrained. The Basics of Bitcoins and Blockchains seeks to give an easy-to-understand introduction to this new money and the groundbreaking technology that underlies it.\n12. Database System Concepts Database System Concepts is a classic and essential work in database education. It presents the fundamental concepts of database management in an easy-to-understand manner, allowing students to begin working with databases straight away.\nThe text is aimed towards junior/senior undergraduate database courses or first-year graduate database courses. It also includes additional information that may be utilized as a supplement or as a prelude to a more advanced course.\n13. Python Crash Course Look no further if you need to learn Python as soon as possible. Python Crash Course is designed to get novice Python programmers up and running quickly. Learn the fundamentals of programming quickly using a project-based approach, so you can focus on what you want to build: websites, data visualization, online apps, or even programming a Raspberry Pi. Python Crash Course is the world\u0026rsquo;s best-selling Python book.\n14. Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems \u0026ldquo;Foundations of data systems\u0026rdquo; provides an excellent overview of data systems. This section begins by discussing desired database qualities such as dependability, scalability, and maintainability. Database concepts such as the classic relational model, the document model, and graph-based models are investigated. The implementation of data storage and retrieval in databases is then thoroughly explained. You will learn about SStables, LSM trees, and B-Trees, as well as how they are employed in databases. Data warehousing and column-oriented databases are thoroughly discussed. The distinctions between OLTP and OLAP are presented in a tabular manner. There is a nice introduction to message brokers, protocolbuf, thrift, and avro.\n15. Object-Oriented Programming with C++ The book\u0026rsquo;s goal is to provide a comprehensive enrichment of knowledge in the domain of object-oriented programming using C++ as the implementation language. The author has utilized simple language to convey important principles of object-oriented programming and to aid readers\u0026rsquo; comprehension. The same ideas have been implemented in solved examples written in the C++ programming language. The book retains its original style of straightforward writing and includes plenty of solved examples, programming exercises, and additional practice problems.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/15-recommended-books-for-computer-science-students/","summary":"We are in the modern world where the digitization of education is already going on. Now lots of blogs, articles are there on the internet to learn from. But Book has its own value, the author puts his all knowledge experience and time to write one whole book. The knowledge and details you get from a book are very precious.\nIn this article, I am going to discuss 15 Recommended Books For Computer Science Students","title":"15 Recommended Books For Computer Science Students"},{"content":"There are so many no-code tools to make the work of developers easier. Anyone can build some useful products, startups without writing even a single line of code. In this article, we will see 40+ No Code/Low Code Tools And Resources For Developers that is going to help you In 2022.\nWhat exactly is no-code? Programming without code is a concise definition. It is the use of no-code tools that allow you to create a fully functional, responsive web application or website without writing any code. However, it goes a little deeper than that.\nEvery piece of technology, including no-code platforms, is developed with code. The distinction is that no-code platforms provide building elements that are required by any website or application, such as pages, data storage and display, individual user profiles, and file upload. People may then link them into their own program using drag and drop or other \u0026ldquo;human-understood\u0026rdquo; actions that do not require coding.\n1. Zapier For folks who are always on the go, automation is a great way to save time. Zapier automates the transfer of data across your online apps, allowing you to focus on your most critical tasks.\n2. FONT FLIPPER You can preview 500+ google fonts on top of your designs using this website.\n3. Figma Figma integrates everyone involved in the design process, allowing teams to produce better products in less time. You can create beautiful designs for your work. The “always online” nature of Figma actually provides some of the greatest strengths of the tool. One of those strengths is that Figma allows for live, real-time collaboration. Free + Paid\n4. Previewed Previewed helps to create smart mockups by just dragging and dropping in the browser. You can create device shots and animated clips.\n5. NoCodeAPI NoCodeAPI helps you to set up your Google Sheets, Airtable, Google Analytics, Twitter, Telegram, Open Graph API, MailChimp, and 50+ other apps without a backend to save time and money.\n6. Spline Spline helps you to create beautiful 3D designs to use for your projects and websites.\n7. removebg You can remove the background of any image without a click. There are a lot of beautiful backgrounds to choose from.\n8. Coolors The lightning-quick colour scheme generator! Create your ideal colour scheme or get inspired by thousands of stunning colour schemes.\n9. Webflow Webflow lets you create your own website without writing any code. More than 3,500,000 designers and teams use Webflow to build, collaborate on, and develop amazing websites on a totally visual canvas – no code required. It is a visual interface builder for digital interfaces. It essentially enables you to position and design parts of any digital interface.\n10. SEO Site Checkup SEO Site Checkup performs a quick audit of your website, checking for proper tags and highlighting any errors that may arise. Analyze your SEO concerns in real-time. You can analyze and act on SEO reports.\n11. Typeform Make forms, surveys, and quizzes that people want to fill out. You can create integrations with various apps to enjoy your time-saving workflow. Free + Paid\n12. Mockuuups Studio Your search for the ideal mockups has come to an end. Designers and marketers can drag and drop graphics into 1200+ mockups in seconds.\n13. extension.dev extension.dev is a low-code platform for building and deploying browser extensions that help you grow your business. Use their library of sample extensions and templates to get started right away, or start from scratch. Free\n14. flaticon Download free icons and stickers for your projects. Resources made by and for designers. PNG, SVG, EPS, PSD and BASE 64 formats. Access 6M+ vector icons \u0026amp; stickers.\n15. freepik Find tons of graphic resources including Free Vectors, Stock Photos and PSD.\n16. landin\u0026rsquo;page.fyi Build your best landing page with hand-picked examples and tools. A curated library of landing page resources. You\u0026rsquo;ll have a up-to-date landing pages in no time.\n17. Framer Create stunning interactive designs from start to finish all on the canvas. Design realistic websites and apps in minutes with pre-made interactive components, polished assets, layout tools, and more.\n18. Tails Tails is the ultimate drag\u0026rsquo;n drop page creator built for TailwindCSS. Over 220+ components to help you look pretty for your customers. Free + Paid\n19. Panelbear Panelbear helps you to measure your website\u0026rsquo;s most important metrics, so you can deliver a great end user experience.\n20. copy.ai With CopyAI’s automated creativity tools, you can generate marketing copy in seconds.\n21. PORY Create your app the way you like using drag and drop blocks. Connect your data from all your favourite apps. Control what users can view, create and modify with user groups.\n22. Shoutout Increase your consumer base by emphasising why people trust you. Shoutout makes it simple to take your current social proof and transform it into a lovely \u0026ldquo;Wall of Love.\u0026rdquo; In less than 3 minutes, you can capture, curate, and publish a wall.\n23. Coda Coda comes with building blocks—like tables and buttons—and time-saving templates, so your doc can grow and evolve with the needs of your team. No more ping-ponging between documents, spreadsheets, and niche workflow apps to get things done. Coda brings all of your words and data into one flexible surface.\n24. BuildFire The Most Powerful App Maker For iOS \u0026amp; Android. BuildFire’s powerful and easy to use mobile app builder makes it so you can create mobile apps for iOS \u0026amp; Android in a fraction of the time and cost.\n25. bubble The best way to build web apps without code. Bubble is the most powerful no-code platform, empowering entrepreneurs to build production-ready web apps.\n26. PAGELY Build beautiful websites In light speed. No coding required. Launch websites from Notion, Google Sheets, GitHub or Airtable.\n27. BUILDBOX Create 2D and 3D game without any coding. Try this awesome low code game development platform. Build any game from scratch or use templates.\n28. Wicked Templates Find HTML landing page templates here. You can get Free and Premium themes, UI Kit\u0026rsquo;s, templates and landing pages built with Tailwind CSS, HTML \u0026amp; Next.js.\n29. Airtable Airtable is a modern spreadsheet tool with database functionalities. It\u0026rsquo;s straightforward and user-friendly, allowing anyone to rapidly establish a database. It\u0026rsquo;s one of the numerous no-code tools that\u0026rsquo;s gaining popularity.\n30. Splitbee The analytics platform helps you to track and optimize your online business. Follow incoming traffic in real-time. Uncover where users come from and what pages they visit. Dive deep into your ad campaigns and see what converts best.\n31. Voiceflow Voiceflow is a conversation design tool that allows teams to create, develop, and launch voice and chat assistants. Voiceflow makes it simple to create contextual discussions. Leverage reusable components, robust context models, interaction model exports, and more all inside our fast \u0026amp; beautiful drag-n-drop canvas.\n32. Notion Notion is one of the most popular productivity apps right now, with over a million users. It continues to expand every day, owing to the adaptability of Notion\u0026rsquo;s robust databases, user-friendly pages, and performance enhancements. You can also create webpages using notion.\n33. Taskade If you want Notion, Zoom, and Slack in one place then you definitely have to use this. Map out your workflow, from ideas to action. Collaborate on projects and manage tasks.\n34. Glide Create powerful apps and websites, without code. Using basic spreadsheet skills, you can make incredible things with Glide. Pick a spreadsheet and Glide instantly generates a real, working app or website to get you started.\n35. Bumpa Manage your business from your phone. Everything you need to sell online, offline and on social media. Track orders. Engage customers. Receive payments. Free Website.\n36. MagicPattern Beautiful graphics with a total of ten tools. Effortlessly and instantly! In just a few clicks, you can create distinctive visuals for social media posts, landing sites, and branding. Then you may save them as photos or even code (SVG \u0026amp; CSS). Create an infinite number of high-quality backdrop graphics for your customers and products.\n37. Shopify Shopify is an e-commerce platform that enables anybody to open an online store and sell their goods. With Shopify POS, merchants can also sell their items in person. Without any programming skills, you can set up a Shopify store and get it up and operating in no time. Themes are installed with a click of a button, and customising them (depending on the theme and its accessible parameters) is as simple as filling out an online form.\n38. Graphite Responsive, Pixel-Perfect, Code-Free. Make site design feel like a comfortable environment. Create pixel-perfect Web Pages, not just mockups, with familiar visual editing tools. Concentrate on the creative aspect, and forget the rest.\n39. Testimonial Easily get video testimonials from your customers. It is difficult it is to get video testimonials. As a result, Testimonial is there for you. You don\u0026rsquo;t require a developer or website hosting to collect video testimonials from your consumers in minutes.\n40. Carrd Carrd is a site-building platform similar to SquareSpace or WordPress that has grown in popularity over the last year. Carrd distinguishes itself from other websites by specializing in one-page websites. Almost all of its capabilities are free to use, and it has a wide range of applications.\n41. IFTTT IFTTT is short for If This Then That, and is the best way to integrate apps, devices, and services. IFTTT makes it possible for devices, services, and apps to interact in new and powerful ways. IFTTT was based on the idea that everything works better when it\u0026rsquo;s done jointly. For anybody wanting to design a smart home or automate their life, tech incompatibility has become a challenge. It\u0026rsquo;s simple with IFTTT.\n42. Nocode Video Explore top Nocode Videos from around the web and learn about new tech. Find tutorials related to Nocode.\n43. MemberSpace With just a few clicks, you can make any section of your website members-only. Simply restrict access to any page of your website, then decide how much visitors will pay to get access. Create memberships for whatever you desire, including courses, video lessons, member directories, and more, all while maintaining complete control over the design.\n44. NoCodery Nocodery is a job board for nocoders, created by nocoders for nocoders. Nocodery collects nocode job offers and jobs from a variety of sources so you don\u0026rsquo;t have to search for them manually on job boards, saving you time!\n45. Codeless.how Codeless is a website offering information for anyone who runs an internet business and wishes to automate routine operations without writing code. You\u0026rsquo;ll learn how to use technologies like Zapier, Webflow, and Airtable to automate marketing, sales, billing, and other activities.\n46.Softr Softr is a fantastic online development tool that allows users to create code-free websites, portals, and web apps in only ten minutes on Airtable. Using Zapier, You may integrate application logic with external services or interconnect multiple sites.\nPeople have been able to use computers without ever writing a line of code for decades. With the proliferation of no-code technologies, a comparable revolution is taking place for those who wish to write software. While the no-code revolution is still in its early stages, the business is expected to be worth more than $43 billion by 2023. The current boom, on the other hand, is the consequence of decades of hard labour and progress that cannot be overlooked.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/40+-no-codelow-code-tools-and-resources-for-developers-in-2022/","summary":"There are so many no-code tools to make the work of developers easier. Anyone can build some useful products, startups without writing even a single line of code. In this article, we will see 40+ No Code/Low Code Tools And Resources For Developers that is going to help you In 2022.\nWhat exactly is no-code? Programming without code is a concise definition. It is the use of no-code tools that allow you to create a fully functional, responsive web application or website without writing any code.","title":"40+ No Code/Low Code Tools And Resources For Developers In 2022"},{"content":"Do you want to start your open source journey? Don\u0026rsquo;t know where to start? Difficulty in finding suitable projects according to your tech stack? Then this article is for you. In this article, I am going to discuss a resource gallery that I curated to help beginners get into the open-source world.\nOpen Source Gallery About❓ Are you a beginner? Wants to start open-source? Don\u0026rsquo;t know how, where, why to start?\nYou are welcome! You are in right place.😊\nOpen-Source-Gallery provides you with all the resources needed to become a good open-sourcer.\nThe motive🎯 of this project is to help new learners like you to get familiar with the world of open-source.\nContents🔥 Every Learner has different preferences, some find docs are easy to understand and learn from there, some prefer video. I have taken care of all that while curating these resources.\nEven after being willing to start, newbies find it difficult to find projects and communities I have taken care of that.\nOpen Source Gallery includes:\nVideos📹 Articles📝 Projects🦾 Programs and Internships Opportunities☕ Communities🔥 Key Peoples🧑‍💻 What Else⚡ I have also included some other resources and resources gallery apart from open source. Hope it will help you in your learning.\nThis resource gallery was 1st curated on Notion but now it is hosted on GitHub. If you find this helpful, don\u0026rsquo;t forget to give it a ⭐ on GitHub.\nHappy learning.👍\nSo, What are you waiting for? Start here\nFinal Words✅ Open Source Gallery is made with a view to helping everyone, It will be constantly updated with new and valuable resources. So you all are welcome to add more resources to the repository and share it with everyone out there who is going to start open-source in 2022.\nDon\u0026rsquo;t forget to give it a ⭐ on GitHub.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/all-resources-to-help-you-start-your-open-source-journey-open-source-gallery/","summary":"Do you want to start your open source journey? Don\u0026rsquo;t know where to start? Difficulty in finding suitable projects according to your tech stack? Then this article is for you. In this article, I am going to discuss a resource gallery that I curated to help beginners get into the open-source world.\nOpen Source Gallery About❓ Are you a beginner? Wants to start open-source? Don\u0026rsquo;t know how, where, why to start?","title":"All Resources To Help You Start Your Open-Source Journey: Open Source Gallery"},{"content":"There are so many websites to make the work of developers easier. Everyone doesn\u0026rsquo;t know all. In this article, we will see 25 Must-Visit Killer Websites For Developers.\n1. DevDocs DevDocs brings together numerous API documentation in a single, searchable interface. You will find docs related to various programming languages, technologies in one place.\n2. ray.so This website allows you to take beautiful screenshots of codes. It also has a dark mode and some preloaded themes for different programming languages. You can also use its VS Code extension.\n3. Poet.so This site is useful for developers who wish to post photos of their tweets on social media. Website transforms your tweet into a beautiful and editable design.\n4. roadmap.sh This website provides roadmaps, guidelines, and other educational content to assist developers in choosing a path and directing their learning. It is very helpful for a beginner as well as a learner who needs guidance.\n5. LambdaTest LambdaTest is a cloud-based cross-browser testing platform that lets you test web applications on over 2000 different browsers, operating systems, and devices. LambdaTest allows you to test cross-browser compatibility both manually and automatically.\n6. daily.dev It is a platform where you can find so many good articles to read daily. It shows the best articles from various platforms directly in your feed. Stay updated with quality content from various platforms directly into your browser by using its extension.\n7. Showwcase Showwcase is a new social media website specially for people who code connect, build community, and find new opportunities. It is a LinkedIn like platform but only focused on developers. You can join and follow me there.\n8. CSS-TRICKS You can master your web development skills by learning every basics about CSS from this website. If you didn\u0026rsquo;t already know, CSS is what makes pages on the web look beautiful.\n9. Medusa An open-source Shopify alternative. Medusa is an open-source headless commerce engine that is fast and customizable. It\u0026rsquo;s Free.\n10. SMARTMOCKUPS Why give your time learning how to use Photoshop. Smartmockups allow you to generate gorgeous high-resolution mockups straight in your browser and across numerous devices using a single interface. The quickest web-based mockup tool available, No prior experience or abilities are required, and the library of professional mockups is always growing.\n11. Code Beautify Make your source code more beautiful and easy to read using code to beautify its AI technology will make your source code more attractive and easy to read.\n12. overAPI For all developers, OverAPI is one of the most beautiful and useful websites. This website has cheatsheets for the majority of programming languages. Take a look at it right now.\n13. Responsively This is an open-source website that speeds up the development of web apps by 5 times. All target screens are displayed side by side in a single window. Reduces the time it takes to develop!\n14. Color Hunt Colorhunt is a website that allows you to select gorgeous colour palettes. Web designers will find it very beneficial to choose beautiful and appealing colours, as well as to accept colour recommendations from other artists and art projects.\n15. Carbon This website will help you to create and share beautiful images of your source codes. It also allows you to make changes to the photographs. You should give it a go right now.\n16. Meta Tags It is a website tag generator that also allows you to update and experiment with your content before seeing how it will appear on Google, Facebook, LinkedIn, and other social media sites.\n17. Profile Pic Maker This website creates a professional and beautiful profile for each photo in your Web developer portfolio. As a developer, you will be exposed to social media. You only need to upload any of your images, and it will edit and enhance them. Give it a go right now.\n18. Small Dev Tools This website offers a variety of free developer tools, including encoders/decoders, HTML/CSS/Javascript formatters, minifies, fake or test data generators, and more. It also allows you to share codes.\n19. resume.io This website allows you to create a quality resume. It will help you to create a professional resume by providing you with well-tested templates. Give it a Try.\n20. CODEPEN CodePen is a web-based development platform that allows users to modify front-end languages such as HTML, CSS, and JavaScript without having to install any software. The nicest aspect is that the findings are visible in real-time, making troubleshooting easier. Developers and designers can also exchange code samples (known as pens) with the rest of the world.\n21. Storytale Storytale is a website that had collections of illustrations that Make your project eye-catching with awesome characters. It can be used personally and commercially. This is a helpful website for web designers. Get High-class assets for web and mobile projects.\n22. readme.so This website allows you to create project README very easily. Its simple editor helps you to quickly add and customize all the sections you need for your project\u0026rsquo;s README. You can use this to create documentation of your open-source projects quickly.\n23. Peppertype Peppertype is a new tool that helps in automating the content production and ideation process. It analyses your business operations, understands your brand and target audience, and then creates fresh content for you using superior machine learning and artificial intelligence. If you are a developer creating content regularly, then this is for you.\n24. synthesia Synthesia helps you to create AI-based videos in over 50+ languages. You don\u0026rsquo;t need a camera, microphone, or real face to create video content. You just need to upload your script and you will get an AI video.\n25. Programmer Humor Even developers also need entertainment. You can visit this website for various memes and jokes related to programming and developers. Have Fun.\nBonus Website: I used screenshots taken by Screely in this Article.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/25-must-visit-killer-websites-for-developers/","summary":"There are so many websites to make the work of developers easier. Everyone doesn\u0026rsquo;t know all. In this article, we will see 25 Must-Visit Killer Websites For Developers.\n1. DevDocs DevDocs brings together numerous API documentation in a single, searchable interface. You will find docs related to various programming languages, technologies in one place.\n2. ray.so This website allows you to take beautiful screenshots of codes. It also has a dark mode and some preloaded themes for different programming languages.","title":"25 Must-Visit Killer Websites For Developers"},{"content":"While maintaining some projects on GitHub during Hacktoberfest 2021, I came across many new open source contributors. They are just starting their open-source journey and making mistakes. In the beginning, making mistakes is not a bad thing. But, correctly contributing to open-source projects is also very important.\nIn this article, I am going to discuss some tips on - How Not to contribute to Open-Source on GitHub.\nUnderstanding Projects Understanding of project like how folders are arranged? how files are linked? which tech stack is used? is the most important thing before raising an issue or making a pull request in any project on GitHub.\nDon\u0026rsquo;t make pull requests or raise issues without reading contributing guidelines of any projects. Always read the README.md file of projects where everything related to the project is written most of the time. Also, clone the project in your machine and go through every file once to understand its working.\nRaising Issue If you want to solve any bug or to contribute some lines of code to a project then you have to raise an issue. But always check the previous issues raised by anyone else to confirm, if anyone else is working or described the same issue that you gonna solve.\nDon\u0026rsquo;t raise 1 or 2-word issue, that doesn\u0026rsquo;t make sense to anyone else. Always remember to add proper details/context in the issue because the issue is like a chain of conversation related to changes you or anyone else wants to make in the project. Write a proper description and proper title to the issue also add screenshots, links, information, or an approach to solve that issue to proper understanding. Make issues such that project maintainers or contributors understand your views and suggestions quickly.\n✅Do this ❌Don\u0026rsquo;t do this Making Pull Request Your PR should do one thing. Always make a pull request for one part or section so that it would be easier for reviewers and maintainers to merge your pull request. If you are solving multiple issues in a project then open multiple PRs.\nDon\u0026rsquo;t make multiple PRs in one, this is confusing sometimes and also delayed the merging process. Let\u0026rsquo;s assume you are making a PR for a new feature in the project and you also found a bug related to a different part of the same project. Don\u0026rsquo;t fix that bug in the same PR. Because sometimes the other changes that gonna add value to the project get delayed due to multiple PRs in one. Make PRs small and on point, which will help your pull request getting merged easily.\nDon’t open a PR like this:\nFixes bug #343 Adds new linting rules Includes feature #466 Attaching screenshots or some information related to your changes in the PR description is also very good practice. This will help the maintainer or reviewer to differentiate between changes.\n✅Do this\n❌Don\u0026rsquo;t do this\nApprovals and Dead PRs Don\u0026rsquo;t start working on any project before the maintainer gives you a go-ahead or assigned that issue to you. Don\u0026rsquo;t open pull requests immediately. Wait for the maintainers approval\nIf the issue is already open and not assigned to anyone, ask maintainers if you can work on that. Start work on your PR. Don\u0026rsquo;t ask maintainers to assign you an issue that is already assigned to someone else. Sometimes you get confused during working on PR maybe you lost interest or whatever reasons please don\u0026rsquo;t leave that open PR as it is, make sure to close that dead PR. The maintainer may not want to close it because they don\u0026rsquo;t want to upset you. It neither looks good for the project nor to you. You can always reopen the Pull request if you want to work on that in the future.\nBe Meaningful Every contribution is valuable. If something is broken in the project like an important link is not working in the documentation that will be needed to be fixed. But if you just change an emoji from ⚡ to 🚀, this is not much valuable.\nDon\u0026rsquo;t break consistency.\nEvery time make sure to follow proper file order and directory to commit changes. Removing semicolons, adding spaces, or making text bold in the project that doesn\u0026rsquo;t prefer them. Hassling Maintainers To Merge When you create any pull request or issue I know you get excited. Maintainers will get a notification that you raised or crested. You don\u0026rsquo;t need to add additional comments and tag them. If it\u0026rsquo;s taking time, give them a friendly call in comments that will be fine.\nDon\u0026rsquo;t hassle them on DMs on Twitter, Discord, Linkedin, or any other socials by sending them links of your issue or PRs. They are getting notifications from projects they maintain and you are adding more notifications. This will create more confusion for maintainers. Remember, most of these people maintaining projects are from different time zones. Many of them are maintaining open-source project in addition of their work. Be patience! You can give them a friendly reminder after 1 week or such.\n✅Do this\n❌Don\u0026rsquo;t do this\nReferences Eddie Jaoude\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/how-not-to-contribute-to-open-source-on-github-tips-for-beginners/","summary":"While maintaining some projects on GitHub during Hacktoberfest 2021, I came across many new open source contributors. They are just starting their open-source journey and making mistakes. In the beginning, making mistakes is not a bad thing. But, correctly contributing to open-source projects is also very important.\nIn this article, I am going to discuss some tips on - How Not to contribute to Open-Source on GitHub.\nUnderstanding Projects Understanding of project like how folders are arranged?","title":"How NOT to contribute to Open Source on GitHub: Tips For Beginners"},{"content":"Learning to code is an amazing thing. How you can code something interesting and then view its fascinating outcomes. But Doing it in the right way is also very important. While scrolling YouTube I found a video where some developers and community leaders were sharing their tips about programming.\nIn this Article, I am going to share 20 Top Tips From The Coding Community\n1. Use Google The developers\u0026rsquo; best friend is Google. I don\u0026rsquo;t know who you are or how much experience you have, no one can remember everything. Learning how to google things itself is a required skill every developer should have. Finding resources to learn or to fix bugs google is going to help you with everything related to your coding journey. Googling is an Art! Learn it.\n2. Pick Tech You Like Choose something you like. JavaScript is trending now in web development, if you like it Great!. If you are not intrested in web development fine! choose App development or some other tech. just make sure to learn something you like.\n3. Learn \u0026amp; Code Always learn \u0026amp; code at the same time. This will help you to understand concepts properly. If you are learning something solve some questions related to the concepts.\n4. Support Other Learners If your classmates or someone is learning something or creating something. Help them with your knowledge, Support them. Supporting someone will going to help you to become a good developer. Talks about the things they did great, talk about the things they need to work upon. Don\u0026rsquo;t humiliate by saying every time: hey you are wrong! this sucks! that\u0026rsquo;s bad, Instead talk about it and explain the solution.\n5. Write Out Your problem Suppose you have a coding issue, when you write it out and started explaining it to someone you end up explaining it in your own brain. Sometimes You already figures out the answer before you even going to ask someone by seeing what you have written. So write out your problems before code.\n6. Build \u0026amp; Practice If you are learning to code, practice is the most important thing to follow across the learning period. Don\u0026rsquo;t stuck in tutorial hell. Learn and practice to get better. Suppose you are learning web development, create mini-projects after clearing every concept, and implement it.\n7. Go At Your Own Pace This is not a competition. If it takes you a long time to understand concepts, it\u0026rsquo;s OK. Don\u0026rsquo;t compare yourself with others, everyone\u0026rsquo;s mind is different. At the end of the day, the only thing matters are what you learned. Go Slowly! Believe in Yourself!\n8. Error Message/Bugs Error messages and bugs are your friends now. Get comfortable with these while coding, it\u0026rsquo;s a part of the job. It\u0026rsquo;s going to help you a lot.\n9. Take Small Breaks Always take small breaks between coding sessions, get up from the chair drink water. walk for 5 minutes, see outside the window, and get relaxed. this will boost your productivity.\n10. Dealing With Imposter Syndrome Remember that no one knows everything and you are not expected to know everything. So, admit when you don\u0026rsquo;t completely understand something so that others around you can help you and celebrates your win. No matter how big or small they are, when you look back at the time when you first started learning. You are going to see how far you came, Never give up.\n11. Fun Based Learning When you code something and going to deploy it remember programming should always be fun. Create small side projects to learn things. Maybe a small game you made helps you to understand the concept faster. when you start enjoying the coding process, you will be going to be a good developer.\n12. Timebox When You Are Stuck If you gonna struggle with a problem, give yourself some time like 30 minutes or 1 hour but in limit before going to ask someone or to take help. Neither ask early nor stuck for too long.\n13. Focus On Small Things Improve yourself every day, fix a time slot to code every day. like you decided to code for 3 hours daily, so follow this. Don\u0026rsquo;t miss these 3 hours. Coding daily will boost your confidence as well as problem-solving skills. These small things matter. Small things make huge differences. Assess your silly mistakes while doing code to improve yourself.\n14. Explore \u0026amp; Be Passionate Always keep exploring new things in the programming world and be passionate about what you are doing or learning. New things always keep coming, find and know about it, keep yourself updated with the latest tools and trends in the coding world. Mastering what you learn but keeping knowledge of changing tech is equally important.\n15. Real \u0026amp; Desired Projects Making small projects while learning is a good thing. But when it comes to jobs having a better side project will give you an edge over others. Just make a project which you want to see in this world, give it a try make your imagination real. Failing is OK, at least you should try.\n16. Find A Mentor and Work With Experienced Peoples Having a good mentor is all you need to grow in the industry or to come out of problems by following the right path. Mentors can guide you to what you need to learn and what not to.\nWorking with experienced people helps you to learn from their experiences. while working they can share some insights which will make your life easier in the coding world.\n17. Find Your Community Community is everything in this industry. Connecting with people of similar interests and fields is all you need to get better. Having in some good communities is the best thing you can do to grab opportunities and to take help and do help.\n18. Physical and Mental Health Staying fit is a huge challenge nowadays. Sitting on a chair for long durations while coding can make you unhealthy, so take proper care of your health. It\u0026rsquo;s most important. Exercise daily! Drink lots of water! Walk around the city! Eat healthily and use the proper desk setup for coding. Do meditation in the morning and wash your eyes with cold water thrice a day. Eyes are most exposed to bright desktop screens.\n19. Document And Share Experiences No matter what you learned or achieved, document your journey. Sometimes during your learning process, you got stuck but get the solution after some time. Do share it with the world by writing blogs or making videos. Your experiences gonna help others.\n20. Contribute To Open-Source Because most coders overlook open-source contributions, I\u0026rsquo;m writing this in the final section of this article. You\u0026rsquo;ve studied everything, but how will you use your knowledge to work on a vast codebase if you don\u0026rsquo;t understand how real-world projects work? It\u0026rsquo;s also critical to have a thorough understanding of real-world software and projects. Start contributing to open source to help you achieve your goals.\nSome Bonus Tips Learn In Public: Post your daily learning on Twitter or LinkedIn. This will help you as well as others. By doing this, you are making yourself more open to job opportunities. Use Stack Overflow: If You get stuck in coding problems and find solutions later share it there so that anyone facing the same issue in the future can take help from it. Some Apps For Student Developers: Gaming apps to social media apps, everyone is using different apps. But having some proper apps to increase your productivity and boost your coding journey is also important. So Read My Article here about some suggestions. If You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/are-you-a-coder-here-are-20-top-tips-from-the-coding-community/","summary":"Learning to code is an amazing thing. How you can code something interesting and then view its fascinating outcomes. But Doing it in the right way is also very important. While scrolling YouTube I found a video where some developers and community leaders were sharing their tips about programming.\nIn this Article, I am going to share 20 Top Tips From The Coding Community\n1. Use Google The developers\u0026rsquo; best friend is Google.","title":"Are You A Coder? Here Are 20 Top Tips From The Coding Community"},{"content":"With GitHub Actions, you can automate, customize, and execute your software development workflows right in your repository. You may find, create, and distribute actions for any job you want to do, including CI/CD, and combine actions in a fully customized workflow.\nIn this Article, I am going to discuss Some Cool GitHub Actions You Won\u0026rsquo;t Believe Exists.\nFor Bloggers Hashnode Blog: You can use this GitHub Action to fetch \u0026amp; display your latest blog posts From Hashnode on your profile or project README.\nMedium Post: You can use this GitHub Action for posting a markdown post to Medium.\nPost to Medium Action: This GitHub Action allows you to automatically create a new Medium post with Markdown or HTML.\nPublish to dev.to: You can use this GitHub Action to publish markdown files as articles on dev.to platform, with assets hosted on GitHub.\nTheActionDev: This GitHub Action allows you to write \u0026amp; maintain dev.to articles without touching the dev.to UI.\nFor Content Creators YouTube-Videos-As-Posts: This GitHub Action update all the videos, title, and description available inside the channel into the posts in Jekyll site structure everyday automatically. No need to manually do any step after posting any new video in YouTube, it will be updated in website on next day.\nUpload Episode from YouTube To Anchor.Fm: This GitHub Action will upload an audio file from a given YouTube video automatically to your Anchor.fm account. It is very useful in a scenario where you have a YouTube account and also a podcast over Spotify, Anchor.fm, Play Music, iTunes etc.\nEbook convert action: You can use this GitHub Action for converting eBooks in several formats. The action supports conversions between many file types i.e.: DOCX, EPUB, HTML, PDF, RTF, TXT\u0026hellip;\nSome More Actions Push notification on Whatsapp: A GitHub action which sends a WhatsApp message when code is pushed to a repository.\nTwitter, together!: This GitHub Action uses text files to post tweets from a GitHub repository for Open Source or event maintainers who share a project Twitter account. GitHub\u0026rsquo;s pull request review mechanism, rather than tweeting directly, encourages increased collaboration, Twitter engagement, and editorial input by allowing anyone to submit a tweet draft to a project.\nNotion2Github: Automatic synchronization from Notion to GitHub.\nProfile Readme Development Stats: Are you an early bird or a night owl? When are you most productive during the day? What are languages you code in? This GitHub Action updates everything in your profile README.\nGitHub Actions are such a productive tool that I have decided to use one of the above Actions in my GitHub while writing this blog. Could You guess? Which one.\nIf You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/some-cool-github-actions-you-wont-believe-exists/","summary":"With GitHub Actions, you can automate, customize, and execute your software development workflows right in your repository. You may find, create, and distribute actions for any job you want to do, including CI/CD, and combine actions in a fully customized workflow.\nIn this Article, I am going to discuss Some Cool GitHub Actions You Won\u0026rsquo;t Believe Exists.\nFor Bloggers Hashnode Blog: You can use this GitHub Action to fetch \u0026amp; display your latest blog posts From Hashnode on your profile or project README.","title":"Some Cool GitHub Actions You Won't Believe Exists"},{"content":"In this new world of technology, there are various apps coming time to time to ease the life and work of peoples. As a student, you must have to use some apps that helps in your study, learning and creating contents.\nHere are some apps you should try as student developer\nMessaging In this tough time of Covid-19, the study is fully online, and online messaging apps are being used by every student and teacher to share notes, assignments, and academics-related information. Use any one app that is used by your friends, family member and university mates so you don’t bother much.\nThese Apps Are:\nSignal WhatsApp Telegram Networking One of the most important things you should do as a student developer is networking. You\u0026rsquo;ve probably heard of networking and know that it includes meeting the proper people who can assist you with your job goals now or in the future. According to a recent study, networking is responsible for 85 percent of all job searches. So you have to build strong networking to get connected for opportunities. In this new online world you all need a good networking app.\nThese Apps Are:\nLinkedin Twitter Polywork Showwcase Community Presence Community Presence is very important for students during college. You can learn new things, participate in various activities and get to know many other students of your college. If you are a student developer, you must be contributing to some open-source organization or taking part in projects building. There are some apps where students and developers communities are active, you can join them to take community insights and discussing projects.\nThese Apps Are:\nSlack Discord Time Management Managing time as a student is a very important thing. Students who manage their time properly could achieve greater productivity in the study. proper planning for 24hours can make life easier for you. using alarm is the old way to manage time, now some apps help to manage your time and proper planning.\nThese Apps Are:\nNotion Taskade Learn and Share As a student developer, you have to acquire the habit of sharing your learnings with others. You can also read the posts from good developers to gain knowledge. Student developers often need to showcase their codes, projects to the world. Sharing and taking help from others is a good habit, this will help you to the overall growth of yourself. Some apps you should use to sharing content, source codes, and gaining knowledge.\nThese Apps Are:\nGitHub DEV Community ‍ ‍ daily.dev Content Creation As a student, if you are interested in creating content to share your knowledge and views with the world you are good to go. there are lots of apps that can help you like to create blogs and if you are a video creator on Instagram or YouTube you can also reach out to your audience for monetary support for your work by using apps.\nThese Apps Are:\nMedium Hashnode Gumroad Buy Me a Coffee If You ❤️ My Content! Connect Me on Twitter or Supports Me By Buying Me A Coffee☕ ","permalink":"https://mranand.com/blogs/some-apps-you-should-use-as-a-student-developer/","summary":"In this new world of technology, there are various apps coming time to time to ease the life and work of peoples. As a student, you must have to use some apps that helps in your study, learning and creating contents.\nHere are some apps you should try as student developer\nMessaging In this tough time of Covid-19, the study is fully online, and online messaging apps are being used by every student and teacher to share notes, assignments, and academics-related information.","title":"Some Apps You Should Use As a Student Developer"},{"content":"About🙏🏼 🎓 I am currently pursuing my Bachelor\u0026rsquo;s in Computer Science Engineering.\n🌱 I am currently learning Web Development and writing Tech Articles.\n🎯 My Goal is to Contribute to as many Open Source projects as possible.\n✨ I love to create different types of Contents.\nMy Experiences🧑🏼‍💻 GSSoC\u0026rsquo; 22 Project Admin: Collaborating with maintainers and contributors for ZeroOctave-JavaScript-Projects. GSSoC'21 Participant: Contributed to some projects, mainly based on Web Development. DWoC'21 Mentor: Helped contributors to collaborate on projects during 2 months period. Hacktoberfest-2021: Participated as maintainer. MLH Hackathons: Participated in Local Hack Day: Build and Local Hack Day: Share. GoogleCloudReady Facilitator Program: Completed Labs and challenges in Qwiklabs. ","permalink":"https://mranand.com/about/","summary":"About🙏🏼 🎓 I am currently pursuing my Bachelor\u0026rsquo;s in Computer Science Engineering.\n🌱 I am currently learning Web Development and writing Tech Articles.\n🎯 My Goal is to Contribute to as many Open Source projects as possible.\n✨ I love to create different types of Contents.\nMy Experiences🧑🏼‍💻 GSSoC\u0026rsquo; 22 Project Admin: Collaborating with maintainers and contributors for ZeroOctave-JavaScript-Projects. GSSoC'21 Participant: Contributed to some projects, mainly based on Web Development. DWoC'21 Mentor: Helped contributors to collaborate on projects during 2 months period.","title":""},{"content":"Paid articles For Others🤝🏼 flycode\nSay No to Coding! Introduction to Low-Code / No-Code 15+ Websites to Help You in Your Developer Journey Featured On daily.dev🔥 Some Useful GitHub Repositories To Enhance Your Web3 Skills GirlScript Summer of Code Learning And Experiences: From Contributor To Project Admin Make Your GitHub Profile Standout To Attract Better Opportunities All Resources To Help You Start Your Open-Source Journey: Open Source Gallery 25 Must-Visit Killer Websites For Developers Featured On DevDojo🔥 Some Useful GitHub Repositories To Enhance Your Web3 Skills Some Apps You Should Use As a Student Developer 40+ No Code/Low Code Tools And Resources For Developers In 2022 25 Must-Visit Killer Websites For Developers Featured On GirlScript Summer of Code Blog🔥 ","permalink":"https://mranand.com/featured/","summary":"Paid articles For Others🤝🏼 flycode\nSay No to Coding! Introduction to Low-Code / No-Code 15+ Websites to Help You in Your Developer Journey Featured On daily.dev🔥 Some Useful GitHub Repositories To Enhance Your Web3 Skills GirlScript Summer of Code Learning And Experiences: From Contributor To Project Admin Make Your GitHub Profile Standout To Attract Better Opportunities All Resources To Help You Start Your Open-Source Journey: Open Source Gallery 25 Must-Visit Killer Websites For Developers Featured On DevDojo🔥 Some Useful GitHub Repositories To Enhance Your Web3 Skills Some Apps You Should Use As a Student Developer 40+ No Code/Low Code Tools And Resources For Developers In 2022 25 Must-Visit Killer Websites For Developers Featured On GirlScript Summer of Code Blog🔥 ","title":""},{"content":"Open Source📚 Wants to start open-source? Are you a beginner? Don\u0026rsquo;t know how, where, why to start?\nYou are welcome! You are in right place.😊\nOpen-Source-Gallery provides you with all the resources needed to become a good open-source contributor, project maintainer \u0026amp; developer.\nThe motive🎯 of this project is to help new learners like you to get familiar with the world of open-source.\nHappy learning.👍\nDeveloper Tech🔮 A curated list of Gadgets a developer needs in the different price ranges.\nThis Amazon idealist is a great place to find gadgets, tools, and other things that you can use if you have no idea about the tech needed for a proper setup.\nResources Gallery📔 If you want to find resources realted to following topics:\n🌐 Web Development 🤖 Machine Learning 📚 Open Source (Updating New Contents) ☕ Programmers Must Know 🐍 Python 🔥 Web3/Blockchain ⚡ Low-Code/No-Code Huge resources gallery in making\u0026hellip;.\nZeroOctave🎈 ZeroOctave is a GitHub Organization.\nwelcomes newbies to Open Source. Contribute in our organization to enhance your skills and obviously our source codes.\nHackathon \u0026amp; Opportunity🎊 Hackathon \u0026amp; Opportunity is a Showwcase community.\nFind hackathons, open-source, and various good opportunities. Many hackathon participants find it hard to get teammates, you can find them here by making a post.\nYou are welcome to share valuable opportunities to help students and beginners.\n","permalink":"https://mranand.com/gallery/","summary":"Open Source📚 Wants to start open-source? Are you a beginner? Don\u0026rsquo;t know how, where, why to start?\nYou are welcome! You are in right place.😊\nOpen-Source-Gallery provides you with all the resources needed to become a good open-source contributor, project maintainer \u0026amp; developer.\nThe motive🎯 of this project is to help new learners like you to get familiar with the world of open-source.\nHappy learning.👍\nDeveloper Tech🔮 A curated list of Gadgets a developer needs in the different price ranges.","title":""},{"content":"","permalink":"https://mranand.com/blogs/","summary":"","title":""}]